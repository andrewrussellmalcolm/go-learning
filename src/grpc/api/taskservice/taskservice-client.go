
// Code generated by protoc-gen-skel.
// source: api.proto

package main

import (
	"flag"
	"golang.gurusys.co.uk/apis/taskservice"
	"golang.gurusys.co.uk/go-framework/client"
	"golang.gurusys.co.uk/go-framework/tokens"
	"golang.gurusys.co.uk/go-framework/utils"
	"golang.org/x/net/context"
	"os"
)

func main() {
	flag.Parse()

	dialer := client.NewDialer()

	err := dialer.DialService("taskservice.TaskService")

	utils.Bail("Connection to the TaskService failed: %s\n", err)

	dialer.RLock()
	defer dialer.RUnlock()

	taskServiceClient := taskservice.NewTaskServiceClient(dialer.GetConn())

	ctx := tokens.ContextWithToken()

	_ = ctx
	_ = taskServiceClient
	
	os.Exit(0)
}


func testAddTask(ctx context.Context, taskServiceClient taskservice.TaskServiceClient){
	input := taskservice.Task{}
	//output := taskservice.Void{}
	output,err := taskServiceClient.AddTask(ctx, &input)

	_ = output
	_ = err
}

func testGetTaskList(ctx context.Context, taskServiceClient taskservice.TaskServiceClient){
	input := taskservice.Void{}
	//output := taskservice.TaskList{}
	output,err := taskServiceClient.GetTaskList(ctx, &input)

	_ = output
	_ = err
}

func testUpdateTask(ctx context.Context, taskServiceClient taskservice.TaskServiceClient){
	input := taskservice.Task{}
	//output := taskservice.Void{}
	output,err := taskServiceClient.UpdateTask(ctx, &input)

	_ = output
	_ = err
}

func testDeleteTask(ctx context.Context, taskServiceClient taskservice.TaskServiceClient){
	input := taskservice.Task{}
	//output := taskservice.Void{}
	output,err := taskServiceClient.DeleteTask(ctx, &input)

	_ = output
	_ = err
}
