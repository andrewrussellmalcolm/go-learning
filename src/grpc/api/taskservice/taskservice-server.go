// Code generated by protoc-gen-skel.
// source: api.proto

package main

import (
	"fmt"
	"flag"

	"os"

	"grpc/api/taskservice"

	
	"golang.org/x/net/context"
	"google.golang.org/grpc"
)

var (
	port = flag.Int("port", 10000, "The server port")
)

func main() {
	flag.Parse()
	sd := server.NewServerDef()
	sd.Port = *port
	sd.Register = server.Register(
		func(server *grpc.Server) error {
			e := new(taskService)
			taskservice.RegisterTaskServiceServer(server, e)
			return nil
		},
	)
	err := server.ServerStartup(sd)

	if err :=nil{
		panic(err)
	}
}

type taskService struct {
}

func (t *taskService) AddTask(ctx context.Context, in *taskservice.Task) (*taskservice.Void, error) {
	fmt.Println("Add")
	return nil, nil
}

func (t *taskService) GetTaskList(ctx context.Context, in *taskservice.Void) (*taskservice.TaskList, error) {
	fmt.Println("Get")	
	return nil, nil
}

func (t *taskService) UpdateTask(ctx context.Context, in *taskservice.Task) (*taskservice.Void, error) {
	fmt.Println("Update")	
	return nil, nil
}

func (t *taskService) DeleteTask(ctx context.Context, in *taskservice.Task) (*taskservice.Void, error) {
	fmt.Println("Delete")	
	return nil, nil
}
